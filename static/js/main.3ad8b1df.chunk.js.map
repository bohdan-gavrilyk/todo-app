{"version":3,"sources":["types/Filter.ts","components/Header/Header.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/PageNavLink/PageNavLink.tsx","components/Footer/Footer.tsx","App.tsx","UseLocalStorage.tsx","index.tsx"],"names":["Filter","Header","addTodo","useState","query","setQuery","className","onSubmit","e","preventDefault","type","data-cy","placeholder","value","onChange","target","TodoInfo","todo","deleteTodo","updateTodo","id","title","completed","isEditing","setIsEditing","inputValue","setInputValue","inputEl","useRef","useEffect","current","focus","changeTitleBlur","classNames","editing","onDoubleClick","checked","htmlFor","aria-label","onClick","ref","onBlur","onKeyUp","key","TodoList","todos","map","PageNavLink","text","to","isActive","selected","Footer","clearCompleted","todosLeft","filter","todoLeft","length","isVisibleButton","App","initialValue","storedValue","localStorage","getItem","JSON","parse","setValue","newValue","setItem","stringify","useLocalStorage","setTodos","useParams","isChecked","setIsChecked","visibleTodos","returnArr","ACTIVE","COMPLETED","filteredTodos","newTodo","Date","allCompleted","every","updatedTodos","toggleAll","updatedTodo","ReactDOM","render","index","element","path","document","getElementById"],"mappings":"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","file":"static/js/main.3ad8b1df.chunk.js","sourcesContent":["// eslint-disable-next-line no-shadow\nexport enum Filter {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React, { ChangeEvent, FormEvent, useState } from 'react';\n\ntype Props = {\n  addTodo: (title:string) => void;\n};\n\nexport const Header: React.FC<Props> = ({ addTodo }) => {\n  const [query, setQuery] = useState('');\n  const handleInput = (e: ChangeEvent<HTMLInputElement>) => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!query) {\n      return;\n    }\n\n    addTodo(query);\n    setQuery('');\n  };\n\n  return (\n    <header className=\"header\">\n      <h1>todos</h1>\n\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          data-cy=\"createTodo\"\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={query}\n          onChange={handleInput}\n        />\n      </form>\n    </header>\n  );\n};\n","import classNames from 'classnames';\nimport React, {\n  ChangeEvent,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n  deleteTodo: (id:number) => void;\n  updateTodo: (updatedTodo: Todo) => void;\n};\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo,\n  deleteTodo,\n  updateTodo,\n}) => {\n  const { id, title, completed } = todo;\n  const [isEditing, setIsEditing] = useState(false);\n  const [inputValue, setInputValue] = useState(title);\n  const inputEl = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (inputEl.current) {\n      inputEl.current.focus();\n    }\n  }, [isEditing]);\n\n  const handleTodoDestroy = () => {\n    deleteTodo(id);\n  };\n\n  const handleCompletedTodo = () => {\n    updateTodo({ ...todo, completed: !completed });\n  };\n\n  const handleTitle = (e:ChangeEvent<HTMLInputElement>) => {\n    setInputValue(e.target.value);\n  };\n\n  const changeTitleBlur = () => {\n    setIsEditing(false);\n    if (inputValue === title) {\n      return;\n    }\n\n    if (inputValue) {\n      updateTodo({ ...todo, title: inputValue });\n    } else {\n      deleteTodo(id);\n    }\n  };\n\n  const handleTodoEdit = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      changeTitleBlur();\n    }\n\n    if (e.key === 'Escape') {\n      setInputValue(title);\n      setIsEditing(false);\n    }\n  };\n\n  const handleEditingInputOpen = () => {\n    setIsEditing(true);\n  };\n\n  return (\n    <li\n      className={classNames({\n        completed,\n        editing: isEditing,\n      })}\n    >\n      <div\n        className=\"view\"\n        onDoubleClick={handleEditingInputOpen}\n      >\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id=\"toggle-view\"\n          checked={completed}\n          onChange={handleCompletedTodo}\n        />\n        <label htmlFor=\"toggle-view\">{title}</label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          data-cy=\"deleteTodo\"\n          aria-label=\"destroy\"\n          onClick={handleTodoDestroy}\n        />\n      </div>\n      <input\n        ref={inputEl}\n        type=\"text\"\n        className=\"edit\"\n        onChange={handleTitle}\n        onBlur={changeTitleBlur}\n        onKeyUp={handleTodoEdit}\n        value={inputValue}\n      />\n    </li>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n  deleteTodo: (id:number) => void;\n  updateTodo: (updatedTodo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  deleteTodo,\n  updateTodo,\n}) => {\n  return (\n    <ul className=\"todo-list\" data-cy=\"todosList\">\n      {todos.map(todo => (\n        <TodoInfo\n          todo={todo}\n          key={todo.id}\n          deleteTodo={deleteTodo}\n          updateTodo={updateTodo}\n        />\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype PageNavLinkProps = {\n  text: string,\n  to: string,\n};\n\nexport const PageNavLink: React.FC<PageNavLinkProps> = ({\n  text,\n  to,\n}) => (\n  <NavLink\n    to={to}\n    className={(({ isActive }) => classNames({ selected: isActive }))}\n  >\n    {text}\n  </NavLink>\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { PageNavLink } from '../PageNavLink';\n\ntype Props = {\n  todos: Todo[];\n  clearCompleted: () => void;\n};\n\nexport const Footer:React.FC<Props> = ({\n  todos,\n  clearCompleted,\n}) => {\n  const todosLeft = todos.filter(todoLeft => !todoLeft.completed).length;\n  const isVisibleButton = todos.filter(todo => todo.completed).length;\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\" data-cy=\"todosCounter\">\n        {todosLeft === 1 ? '1 item left' : `${todosLeft} items left`}\n      </span>\n\n      <ul className=\"filters\" data-cy=\"todosFilter\">\n        <li>\n          <PageNavLink\n            to=\"/\"\n            text=\"All\"\n          />\n        </li>\n\n        <li>\n          <PageNavLink\n            to=\"/active\"\n            text=\"Active\"\n          />\n        </li>\n\n        <li>\n          <PageNavLink\n            to=\"/completed\"\n            text=\"Completed\"\n          />\n        </li>\n      </ul>\n\n      {isVisibleButton > 0 && (\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={clearCompleted}\n        >\n          Clear completed\n        </button>\n      )}\n    </footer>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Header } from './components/Header';\nimport { TodoList } from './components/TodoList';\nimport { Footer } from './components/Footer';\nimport { Todo } from './types/Todo';\nimport { useLocalStorage } from './UseLocalStorage';\nimport { Filter } from './types/Filter';\n\nfunction filteredTodos(todos:Todo[], filter:string) {\n  const returnArr = [...todos];\n\n  switch (filter) {\n    case Filter.ACTIVE:\n      return returnArr.filter(todo => !todo.completed);\n    case Filter.COMPLETED:\n      return returnArr.filter(todo => todo.completed);\n    default:\n      return returnArr;\n  }\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useLocalStorage<Todo[]>('todos', []);\n  const { filter = '' } = useParams();\n  const [isChecked, setIsChecked] = useState(false);\n  const visibleTodos = filteredTodos(todos, filter);\n\n  const addTodo = (title: string) => {\n    const newTodo = {\n      id: +new Date(),\n      title,\n      completed: false,\n    };\n\n    setTodos([...todos, newTodo]);\n  };\n\n  const deleteTodo = (id: number) => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n\n  const updateTodo = (updatedTodo: Todo) => {\n    setTodos(todos.map(todo => (\n      todo.id === updatedTodo.id ? updatedTodo : todo)));\n  };\n\n  const toggleAll = () => {\n    const allCompleted = todos.every(todo => todo.completed);\n    const updatedTodos = todos.map(todo => ({\n      ...todo,\n      completed: !allCompleted,\n    }));\n\n    setTodos(updatedTodos);\n  };\n\n  const handleChecked = () => {\n    setIsChecked(!isChecked);\n    toggleAll();\n  };\n\n  const clearCompleted = () => {\n    setTodos(todos.filter(({ completed }) => !completed));\n  };\n\n  return (\n    <div className=\"todoapp\">\n      <Header addTodo={addTodo} />\n\n      {todos.length > 0 && (\n        <>\n          <section className=\"main\">\n            <input\n              type=\"checkbox\"\n              id=\"toggle-all\"\n              className=\"toggle-all\"\n              data-cy=\"toggleAll\"\n              onChange={handleChecked}\n              checked={isChecked}\n            />\n            <label htmlFor=\"toggle-all\">\n              Mark all as complete\n            </label>\n\n            <TodoList\n              todos={visibleTodos}\n              deleteTodo={deleteTodo}\n              updateTodo={updateTodo}\n            />\n          </section>\n          <Footer\n            todos={todos}\n            clearCompleted={clearCompleted}\n          />\n\n        </>\n      )}\n    </div>\n  );\n};\n","import { useState } from 'react';\n\ntype ReturnValue<T> = [\n  T,\n  (newValue: T) => void,\n];\n\nexport function useLocalStorage<T>(\n  key: string,\n  initialValue: T,\n): ReturnValue<T> {\n  const [value, setValue] = useState<T>(() => {\n    try {\n      const storedValue = localStorage.getItem(key);\n\n      if (storedValue) {\n        return JSON.parse(storedValue);\n      }\n\n      return initialValue;\n    } catch {\n      return initialValue;\n    }\n  });\n\n  const saveToStorage = (newValue: T) => {\n    setValue(newValue);\n    localStorage.setItem(key, JSON.stringify(newValue));\n  };\n\n  return [value, saveToStorage];\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport { HashRouter as Router, Routes, Route } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <Router>\n    <Routes>\n      <Route>\n        <Route index element={<App />} />\n        <Route path=\":filter\" element={<App />} />\n      </Route>\n    </Routes>\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}